<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="nebula_adding_secrets" class="- topic/topic concept/concept ">
 <title class="- topic/title ">Adding secrets</title>
 <shortdesc class="- topic/shortdesc ">Add a secret to your workflow and then use <ph conkeyref="ProductNames/nebula" class="- topic/ph ">'s</ph>'s
  web interface, or the CLI to set a value for the secret.</shortdesc>
 

 <conbody class="- topic/body  concept/conbody ">
  <p class="- topic/p ">To add a secret to your workflow, add the <codeph translate="no" class="+ topic/ph pr-d/codeph ">Secret</codeph> type together
   with a <codeph translate="no" class="+ topic/ph pr-d/codeph ">name</codeph> key. For
   example:<codeblock translate="no" class="+ topic/pre pr-d/codeblock ">credentials:
  $type: Secret
  name: credentials</codeblock> To
   set a value for the secret, on the workflow's page, click <uicontrol class="+ topic/ph ui-d/uicontrol ">New secret</uicontrol>, or
   use the <ph class="- topic/ph ">secret set</ph>
   command:<codeblock translate="no" class="+ topic/pre pr-d/codeblock ">./nebula-cli/nebula-cli secret set --workflow &lt;WORKFLOW_NAME&gt; --key &lt;KEY_NAME&gt;</codeblock></p>
  <p class="- topic/p ">
   <note type="important" class="- topic/note "> The value you set for a secret must be a string. If you have multiple
    key-value pairs to pass in to the secret, or your secret is the contents of a file, you must
    encode the values using base64 encoding, and use the encoded string as the secret value. </note>
  </p>
  <p class="- topic/p ">Here's an example of a workflow that provisions a Kubernetes cluster on Google Cloud Project
   (GCP). The workflow makes use of two secrets, <codeph translate="no" class="+ topic/ph pr-d/codeph ">cluster-service-account-credentials</codeph> and <codeph translate="no" class="+ topic/ph pr-d/codeph ">cluster-project</codeph>.<codeblock translate="no" class="+ topic/pre pr-d/codeblock ">version: v1
description: Nebula Kubernetes cluster provisioner

steps:
- name: create-k8s-cluster
  image: gcr.io/nebula-tasks/nebula-k8s-provisioner:latest
  spec:
    provider: gcp
    credentials:
      $type: Secret
      name: cluster-service-account-credentials
    project:
      $type: Secret
      name: cluster-project
    clusterName: test-cluster
    stateStoreName: demo-gcp-cluster-state
    nodeCount: 3
    zones: ["us-west1-a"]</codeblock></p>
 </conbody>
</concept>